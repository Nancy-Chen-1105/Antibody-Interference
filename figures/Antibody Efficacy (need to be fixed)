---
title: "Antibody Effect"
output: html_document
---

```{r}
library(deSolve)
library(tidyverse)
library(ggplot2)
library(dplyr)
```

main ode function
```{r}
#implementing model equations
testing<- function (t, y, parms) {
  with(as.list(c(parms)),{
    y=pmax(y,0)
    
    # vectors for each population
    V=y[1:(n+1)] 
    I=y[n+2]
    
    # make empty vectors of length n for the derivatives
    dV=rep(0,n+1)
    dI=0
    
    #making hill functions 
    beta=rep(0,n+1)
    d = rep(0,n+1)
    
    for(i in 1:(n+1)){
       beta[i] = c1*i^m/(phi1^m + i^m)
       d[i] = c2*(1-i^m/(phi2^m + i^m))
    }
    
    
    # calculate the derivatives
    dV[1] =  +p*I[1] - alpha*A*V[1] - beta[1]*U*V[1] - d[1]*V[1]
    
    for(i in 2:(n)){
      dV[i] = +(n-(i-2))/n*alpha*A*V[i-1] - (n-(i-1))/n*alpha*A*V[i] 
              - beta[i]*U*V[i] - d[i]*V[i]
    }
    
    dV[n+1] =  (1/n)*alpha*A*V[n] - beta[n+1]*U*V[n+1] - d[n+1]*V[n+1]
    
    dI[1]= + U*(sum(beta[1:n+1]*V[1:n+1])) - di*I[1]
    
# output the derivatives
  dy=c(dV, dI)
   return(list(dy))
  })
}
```

setting parameters
```{r}
#unchanged parameters
p = 3
n = 50
alpha = 1 # antibody bounding speed  
di = 1.25 # infected cells dying rate

m = 2
c1 = 5*10^(-5)
phi1 = 20
c2 = 5
phi2 = 20

U = 10^6

time <- seq(0, 100, 1)

statenames <-c(paste('V',1:51, sep=''), 'I')
y <- rep(0, n+2)
names(y)<-statenames
y[grep('^V1$', statenames)]<-100
y[grep('I', statenames)]<-10

#Antibody Concentrations
A_s = c(10, 20, 30)
```

for loop for simulation
```{r}
tot <- matrix(nrow = 101, ncol = 3)
colnames(tot) <- c("1", "2", "3")
l = 1

for (a in A_s){
  parms = c(p=p, n=n, alpha=alpha, A=a,di=di,
          m=m, c1=c1, phi1=phi1, c2=c2, phi2=phi2, U=U)
  
  soln <- as.data.frame(ode(y = y, time = time, testing, parms = parms))
  tot[,l] <- rowSums(soln[,2:52])
  colnames(tot)[l] <- c(paste0("A", a))
  l <- l+1
}

tot <- as.data.frame(tot)
tot$time <- c(seq(0,100,1))
tot
```

Plotting 

```{r}
ggplot(tot, aes(time, A10))+
  scale_y_log10()+
  geom_line(aes(time, A10, col = "A=10"))+
  geom_line(aes(time, A20, col = "A=20"))+
  geom_line(aes(time, A30, col = "A=30"))+
  labs(title = "Total Amount of Virus vs. Different Antibody Concentration",
       x = "Time (days)", y = "Virus Population")+
  scale_colour_manual(name = " ", values = c("A=10" = "black",
                                             "A=20"="navy","A=30"="tomato")) 
```

calculating the slope
```{r}

```




